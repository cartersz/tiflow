// Copyright 2022 PingCAP, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";
package pingcap.tiflow.cdc.schedulepb;
option go_package = "schedulepb";

import "gogoproto/gogo.proto";

message OwnerReversion { int64 reversion = 1; }

message ProcessorEpoch { string epoch = 1; }

message Checkpoint {
    uint64 checkpoint_ts =
        1 [(gogoproto.casttype) = "github.com/pingcap/tiflow/cdc/model.Ts"];
    uint64 resolved_ts =
        2 [(gogoproto.casttype) = "github.com/pingcap/tiflow/cdc/model.Ts"];
}

message AddTableRequest {
    int64 table_id = 1
        [(gogoproto.casttype) = "github.com/pingcap/tiflow/cdc/model.TableID"];
    bool is_secondary = 2;
    Checkpoint checkpoint = 3;
}

message RemoveTableRequest {
    int64 table_id = 1
        [(gogoproto.casttype) = "github.com/pingcap/tiflow/cdc/model.TableID"];
}

message DispatchTableRequest {
    OwnerReversion owner_reversion = 1;
    AddTableRequest add_table = 2;
    RemoveTableRequest remove_table = 3;
}

message AddTableResponse {
    int64 table_id = 1
        [(gogoproto.casttype) = "github.com/pingcap/tiflow/cdc/model.TableID"];
    bool is_secondary = 2;
    Checkpoint checkpoint = 3;
    bool reject = 4;
}

message RemoveTableResponse {
    int64 table_id = 1
        [(gogoproto.casttype) = "github.com/pingcap/tiflow/cdc/model.TableID"];
    Checkpoint checkpoint = 2;
}

message DispatchTableResponse {
    OwnerReversion owner_reversion = 1;
    AddTableResponse add_table = 2;
    RemoveTableResponse remove_table = 3;
}

message Announce {
    OwnerReversion owner_reversion = 1;
    string owner_version = 2;
}

enum TableState {
    Unknown = 0;
    Running = 1;
    Adding = 2;
    Removing = 3;
}

message TableStatus {
    int64 table_id = 1
        [(gogoproto.casttype) = "github.com/pingcap/tiflow/cdc/model.TableID"];
    TableState state = 2;
}

message Sync {
    ProcessorEpoch processor_epoch = 1;
    string processor_version = 2;
}
